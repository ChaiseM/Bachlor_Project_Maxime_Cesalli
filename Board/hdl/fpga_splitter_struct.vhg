--
-- VHDL Architecture Board.FPGA_splitter.struct
--
-- Created:
--          by - maxime.cesalli.UNKNOWN (WE2330804)
--          at - 11:51:10 14.06.2023
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;
LIBRARY gates;
  USE gates.gates.all;
LIBRARY Common;
  USE Common.CommonLib.all;

LIBRARY sequential;
LIBRARY Splitter;

ARCHITECTURE struct OF FPGA_splitter IS

    -- Architecture declarations
    constant clockFrequency: real := 66.0E6;
    constant rs232BaudRate: real := 115.2E3;
    constant pwmFrequency: real := 100.0E3;
    constant mainsFrequency: real := 50.0;
    constant debounceCounterBitNb: positive := requiredBitNb(integer(clockFrequency/100.0));
    constant spikeFilterCounterBitNb: positive := requiredBitNb(10);
    constant buttonsRepeatFrequency: real := 100.0;
    constant controlAmplitudeBitNb: natural := 10;
    constant proportionalShift: integer := -14;
    constant integratorShift: integer := -12;
    constant testLineNb: positive := 16;

    -- Internal signal declarations
    SIGNAL CLK_I        : std_uLogic;
    SIGNAL Data_I       : std_uLogic;
    SIGNAL LR_I         : std_uLogic;
    SIGNAL reset        : std_ulogic;
    SIGNAL reset1       : std_ulogic;
    SIGNAL resetSynch   : std_ulogic;
    SIGNAL resetSynch_n : std_ulogic;


    -- Component Declarations
    COMPONENT inverter
    GENERIC (
        delay : time := gateDelay
    );
    PORT (
        in1  : IN     std_uLogic ;
        out1 : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT logic1
    PORT (
        logic_1 : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT DFF
    GENERIC (
        delay : time := gateDelay
    );
    PORT (
        CLK : IN     std_uLogic ;
        CLR : IN     std_uLogic ;
        D   : IN     std_uLogic ;
        Q   : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT leftRightSplitter
    GENERIC (
        signalBitNb  : positive := 24;
        signalOBitNb : positive := 32
    );
    PORT (
        CLK_I  : IN     std_uLogic ;
        Data_I : IN     std_uLogic ;
        LR_I   : IN     std_uLogic ;
        S20    : IN     std_ulogic ;
        S21    : IN     std_ulogic ;
        S22    : IN     std_ulogic ;
        S23    : IN     std_ulogic ;
        S30    : IN     std_ulogic ;
        S31    : IN     std_ulogic ;
        S32    : IN     std_ulogic ;
        S33    : IN     std_ulogic ;
        S40    : IN     std_ulogic ;
        S41    : IN     std_ulogic ;
        S42    : IN     std_ulogic ;
        S43    : IN     std_ulogic ;
        clock  : IN     std_ulogic ;
        reset  : IN     std_ulogic ;
        CLK_O  : OUT    std_uLogic ;
        Data_O : OUT    std_uLogic ;
        LR_O   : OUT    std_ulogic 
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : DFF USE ENTITY sequential.DFF;
    FOR ALL : inverter USE ENTITY gates.inverter;
    FOR ALL : leftRightSplitter USE ENTITY Splitter.leftRightSplitter;
    FOR ALL : logic1 USE ENTITY gates.logic1;
    -- pragma synthesis_on


BEGIN

    -- Instance port mappings.
    I1 : inverter
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            in1  => reset_n,
            out1 => reset
        );
    I7 : inverter
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            in1  => resetSynch_n,
            out1 => resetSynch
        );
    I28 : logic1
        PORT MAP (
            logic_1 => reset1
        );
    I_rst : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => reset,
            D   => reset1,
            Q   => resetSynch_n
        );
    I_rst1 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => LR_In,
            Q   => LR_I
        );
    I_rst2 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => Data_In,
            Q   => Data_I
        );
    I_rst3 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => CLK_In,
            Q   => CLK_I
        );
    I0 : leftRightSplitter
        GENERIC MAP (
            signalBitNb  => 24,
            signalOBitNb => 32
        )
        PORT MAP (
            CLK_I  => CLK_I,
            Data_I => Data_I,
            LR_I   => LR_I,
            S20    => S20,
            S21    => S21,
            S22    => S22,
            S23    => S23,
            S30    => S30,
            S31    => S31,
            S32    => S32,
            S33    => S33,
            S40    => S40,
            S41    => S41,
            S42    => S42,
            S43    => S43,
            clock  => clock,
            reset  => resetSynch,
            CLK_O  => CLK_O,
            Data_O => Data_O,
            LR_O   => LR_O
        );

END struct;
