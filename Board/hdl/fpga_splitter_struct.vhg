--
-- VHDL Architecture Board.FPGA_splitter.struct
--
-- Created:
--          by - maxime.cesalli.UNKNOWN (WE2330804)
--          at - 14:35:41 15.08.2023
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;
LIBRARY gates;
  USE gates.gates.all;
LIBRARY Common;
  USE Common.CommonLib.all;

LIBRARY sequential;
LIBRARY Splitter;

ARCHITECTURE struct OF FPGA_splitter IS

    -- Architecture declarations
    constant DATA_WIDTH : positive := 32; --i2s out
    constant COEFF_BIT_NB : positive := 32; 
    constant FILTER_TAP_NB : positive := 649;
    constant DATA_IN_WIDTH : positive := 32; -- i2s In
    constant addressBitNb :positive := 12; -- for the RAM
    constant dataBitNb :positive := 16; -- For the RAM
    constant uartDataBitNb : positive := 7;
    constant uartBaudRate: real := 9.6E3;
    constant clockFrequency: real := 66.6E6;

    -- Internal signal declarations
    SIGNAL CLK_I        : std_uLogic;
    SIGNAL CLK_O1       : std_uLogic;
    SIGNAL Data_I       : std_uLogic;
    SIGNAL Data_O1      : std_uLogic;
    SIGNAL LR_I         : std_uLogic;
    SIGNAL LR_O1        : std_ulogic;
    SIGNAL RxD_synch    : std_uLogic;
    SIGNAL reset        : std_ulogic;
    SIGNAL reset1       : std_ulogic;
    SIGNAL resetSynch   : std_ulogic;
    SIGNAL resetSynch_n : std_ulogic;


    -- Component Declarations
    COMPONENT inverter
    GENERIC (
        delay : time := gateDelay
    );
    PORT (
        in1  : IN     std_uLogic ;
        out1 : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT logic1
    PORT (
        logic_1 : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT DFF
    GENERIC (
        delay : time := gateDelay
    );
    PORT (
        CLK : IN     std_uLogic ;
        CLR : IN     std_uLogic ;
        D   : IN     std_uLogic ;
        Q   : OUT    std_uLogic 
    );
    END COMPONENT;
    COMPONENT leftRightSplitter
    GENERIC (
        DATA_WIDTH     : positive;
        COEFF_BIT_NB   : positive;
        FILTER_TAP_NB  : positive;
        DATA_IN_WIDTH  : positive;
        addressBitNb   : positive;
        dataBitNb      : positive;
        uartDataBitNb  : positive;
        uartBaudRate   : real;
        clockFrequency : real
    );
    PORT (
        CLK_I     : IN     std_uLogic ;
        Data_I    : IN     std_uLogic ;
        LR_I      : IN     std_uLogic ;
        RxD_synch : IN     std_ulogic ;
        S21       : IN     std_ulogic ;
        S22       : IN     std_ulogic ;
        S23       : IN     std_ulogic ;
        clock     : IN     std_ulogic ;
        reset     : IN     std_ulogic ;
        CLK_O     : OUT    std_uLogic ;
        Data_O    : OUT    std_uLogic ;
        LR_O      : OUT    std_ulogic ;
        testOut   : OUT    std_ulogic_vector (5 DOWNTO 0)
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : DFF USE ENTITY sequential.DFF;
    FOR ALL : inverter USE ENTITY gates.inverter;
    FOR ALL : leftRightSplitter USE ENTITY Splitter.leftRightSplitter;
    FOR ALL : logic1 USE ENTITY gates.logic1;
    -- pragma synthesis_on


BEGIN

    -- Instance port mappings.
    I1 : inverter
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            in1  => reset_n,
            out1 => reset
        );
    I7 : inverter
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            in1  => resetSynch_n,
            out1 => resetSynch
        );
    I28 : logic1
        PORT MAP (
            logic_1 => reset1
        );
    I_rst : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => reset,
            D   => reset1,
            Q   => resetSynch_n
        );
    I_rst1 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => LR_In,
            Q   => LR_I
        );
    I_rst2 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => Data_In,
            Q   => Data_I
        );
    I_rst3 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => CLK_In,
            Q   => CLK_I
        );
    I_rst4 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => Data_O1,
            Q   => Data_O
        );
    I_rst5 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => CLK_O1,
            Q   => CLK_O
        );
    I_rst6 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => LR_O1,
            Q   => LR_O
        );
    I_rst7 : DFF
        GENERIC MAP (
            delay => 1 ns
        )
        PORT MAP (
            CLK => clock,
            CLR => resetSynch,
            D   => RxD,
            Q   => RxD_synch
        );
    I0 : leftRightSplitter
        GENERIC MAP (
            DATA_WIDTH     => DATA_WIDTH,
            COEFF_BIT_NB   => COEFF_BIT_NB,
            FILTER_TAP_NB  => FILTER_TAP_NB,
            DATA_IN_WIDTH  => DATA_IN_WIDTH,
            addressBitNb   => addressBitNb,
            dataBitNb      => dataBitNb,
            uartDataBitNb  => uartDataBitNb,
            uartBaudRate   => uartBaudRate,
            clockFrequency => clockFrequency
        )
        PORT MAP (
            CLK_I     => CLK_I,
            Data_I    => Data_I,
            LR_I      => LR_I,
            RxD_synch => RxD_synch,
            S21       => S21,
            S22       => S22,
            S23       => S23,
            clock     => clock,
            reset     => resetSynch,
            CLK_O     => CLK_O1,
            Data_O    => Data_O1,
            LR_O      => LR_O1,
            testOut   => testOut
        );

END struct;
