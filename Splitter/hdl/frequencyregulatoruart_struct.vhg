--
-- VHDL Architecture GeneratorControl.frequencyRegulatorUart.struct
--
-- Created:
--          by - francois.francois (Hyperion)
--          at - 09:29:31 09/20/22
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY GeneratorControl;
LIBRARY RS232;

ARCHITECTURE struct OF frequencyRegulatorUart IS

   -- Architecture declarations
   constant uartBitNb : positive := 8;

   -- Internal signal declarations
   SIGNAL parallelOut : unsigned(controlAmplitude'high DOWNTO 0);
   SIGNAL rxData      : std_ulogic_vector(uartBitNb-1 DOWNTO 0);
   SIGNAL rxEmpty     : std_ulogic;
   SIGNAL rxRd        : std_ulogic;
   SIGNAL txData      : std_ulogic_vector(uartBitNb-1 DOWNTO 0);
   SIGNAL txFull      : std_ulogic;
   SIGNAL txWr        : std_ulogic;


   -- Component Declarations
   COMPONENT serDes
   GENERIC (
      parallelInBitNb  : positive := 8;
      parallelOutBitNb : positive := 8;
      serialPortBitNb  : integer  := 0
   );
   PORT (
      clock       : IN     std_ulogic ;
      parallelIn  : IN     signed (parallelInBitNb-1 DOWNTO 0);
      reset       : IN     std_ulogic ;
      rxData      : IN     std_ulogic_vector (serialPortBitNb-1 DOWNTO 0);
      rxEmpty     : IN     std_ulogic ;
      send        : IN     std_ulogic ;
      txFull      : IN     std_ulogic ;
      parallelOut : OUT    unsigned (parallelOutBitNb-1 DOWNTO 0);
      rxRd        : OUT    std_ulogic ;
      txData      : OUT    std_ulogic_vector (serialPortBitNb-1 DOWNTO 0);
      txWr        : OUT    std_ulogic 
   );
   END COMPONENT;
   COMPONENT serialPortFIFO
   GENERIC (
      baudRateDivide : positive := 2083;
      dataBitNb      : positive := 8;
      txFifoDepth    : positive := 8;
      rxFifoDepth    : positive := 8
   );
   PORT (
      RxD     : IN     std_ulogic ;
      TxD     : OUT    std_ulogic ;
      clock   : IN     std_ulogic ;
      reset   : IN     std_ulogic ;
      rxEmpty : OUT    std_ulogic ;
      rxRd    : IN     std_ulogic ;
      rxData  : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      txData  : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      txFull  : OUT    std_ulogic ;
      txWr    : IN     std_ulogic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : serDes USE ENTITY GeneratorControl.serDes;
   FOR ALL : serialPortFIFO USE ENTITY RS232.serialPortFIFO;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   controlAmplitude <= unsigned(parallelOut);


   -- Instance port mappings.
   I_bytes : serDes
      GENERIC MAP (
         parallelInBitNb  => periodDiff'length,
         parallelOutBitNb => controlAmplitude'length,
         serialPortBitNb  => uartBitNb
      )
      PORT MAP (
         clock       => clock,
         parallelIn  => periodDiff,
         reset       => reset,
         rxData      => rxData,
         rxEmpty     => rxEmpty,
         send        => en,
         txFull      => txFull,
         parallelOut => parallelOut,
         rxRd        => rxRd,
         txData      => txData,
         txWr        => txWr
      );
   I_uart : serialPortFIFO
      GENERIC MAP (
         baudRateDivide => baudRateDivide,
         dataBitNb      => uartBitNb,
         txFifoDepth    => 1,
         rxFifoDepth    => 1
      )
      PORT MAP (
         RxD     => rxD,
         TxD     => txD,
         clock   => clock,
         reset   => reset,
         rxEmpty => rxEmpty,
         rxRd    => rxRd,
         rxData  => rxData,
         txData  => txData,
         txFull  => txFull,
         txWr    => txWr
      );

END struct;
