--
-- VHDL Architecture Splitter.leftRightSplitter.visitorsVersion
--
-- Created:
--          by - maxime.cesalli.UNKNOWN (WE2330804)
--          at - 15:53:12 02.06.2023
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;
LIBRARY gates;
  USE gates.gates.all;
LIBRARY Common;
  USE Common.CommonLib.all;

LIBRARY Splitter;
LIBRARY Splitter_test;

ARCHITECTURE visitorsVersion OF leftRightSplitter IS

    -- Architecture declarations
    constant DATA_WIDTH : positive := 32;
    constant COEFF_BIT_NB : positive := 16;
    constant FILTER_TAP_NB : positive := 33;
    constant DATA_IN_WIDTH : positive := 32;

    -- Internal signal declarations
    SIGNAL DOUT        : std_ulogic;
    SIGNAL LRCK        : std_ulogic;
    SIGNAL SCK         : std_ulogic;
    SIGNAL audioLeft   : signed(DATA_IN_WIDTH-1 DOWNTO 0);
    SIGNAL audioRight  : signed(DATA_IN_WIDTH-1 DOWNTO 0);
    SIGNAL audioRight1 : signed(DATA_WIDTH-1 DOWNTO 0);
    SIGNAL audio_L_out : signed(DATA_IN_WIDTH-1 DOWNTO 0);
    SIGNAL audio_R_out : signed(DATA_IN_WIDTH-1 DOWNTO 0);
    SIGNAL dataValid   : std_ulogic;
    SIGNAL en          : std_logic;


    -- Component Declarations
    COMPONENT StoM
    GENERIC (
        signalOBitNb : positive
    );
    PORT (
        audioLeft  : IN     signed (signalOBitNb-1 DOWNTO 0);
        audioRight : IN     signed (signalOBitNb-1 DOWNTO 0);
        audioMono  : OUT    signed (signalOBitNb-1 DOWNTO 0);
        clock      : IN     std_ulogic ;
        reset      : IN     std_ulogic 
    );
    END COMPONENT;
    COMPONENT iisDecoder
    GENERIC (
        DATA_IN_WIDTH : positive
    );
    PORT (
        reset      : IN     std_ulogic ;
        clock      : IN     std_ulogic ;
        LRCK       : IN     std_ulogic ;
        SCK        : IN     std_ulogic ;
        DOUT       : IN     std_ulogic ;
        dataValid  : OUT    std_ulogic ;
        audioLeft  : OUT    signed (DATA_IN_WIDTH-1 DOWNTO 0);
        audioRight : OUT    signed (DATA_IN_WIDTH-1 DOWNTO 0)
    );
    END COMPONENT;
    COMPONENT iisEncoder
    GENERIC (
        DATA_WIDTH : positive
    );
    PORT (
        reset      : IN     std_ulogic ;
        clock      : IN     std_ulogic ;
        audioLeft  : IN     signed (DATA_WIDTH-1 DOWNTO 0);
        audioRight : IN     signed (DATA_WIDTH-1 DOWNTO 0);
        LRCK       : OUT    std_ulogic ;
        SCK        : OUT    std_ulogic ;
        DOUT       : OUT    std_ulogic ;
        CLKI2s     : IN     std_uLogic ;
        LRCK1      : IN     std_uLogic 
    );
    END COMPONENT;
    COMPONENT risingEdgeDetector
    PORT (
        clock     : IN     std_logic ;
        dataValid : IN     std_logic ;
        reset     : IN     std_logic ;
        en        : OUT    std_logic 
    );
    END COMPONENT;
    COMPONENT bascule
    GENERIC (
        DATA_IN_WIDTH : positive
    );
    PORT (
        audio_L_in  : IN     signed (DATA_IN_WIDTH-1 DOWNTO 0);
        audio_R_in  : IN     signed (DATA_IN_WIDTH-1 DOWNTO 0);
        clock       : IN     std_ulogic ;
        dataVAlid   : IN     std_ulogic ;
        reset       : IN     std_ulogic ;
        audio_L_out : OUT    signed (DATA_IN_WIDTH-1 DOWNTO 0);
        audio_R_out : OUT    signed (DATA_IN_WIDTH-1 DOWNTO 0)
    );
    END COMPONENT;

    -- Optional embedded configurations
    -- pragma synthesis_off
    FOR ALL : StoM USE ENTITY Splitter.StoM;
    FOR ALL : bascule USE ENTITY Splitter_test.bascule;
    FOR ALL : iisDecoder USE ENTITY Splitter.iisDecoder;
    FOR ALL : iisEncoder USE ENTITY Splitter.iisEncoder;
    FOR ALL : risingEdgeDetector USE ENTITY Splitter.risingEdgeDetector;
    -- pragma synthesis_on


BEGIN
    -- Architecture concurrent statements
    -- HDL Embedded Text Block 1 eb1
    Data_O <= DOUT;
    LR_O <= LRCK;
    CLK_O <= SCK;
    
    --Data_O <= Data_I;
    --LR_O <= LR_I;
    --CLK_O <= CLK_I;
    


    -- Instance port mappings.
    I3 : StoM
        GENERIC MAP (
            signalOBitNb => DATA_IN_WIDTH
        )
        PORT MAP (
            audioLeft  => audio_L_out,
            audioRight => audio_R_out,
            audioMono  => audioRight1,
            clock      => clock,
            reset      => reset
        );
    I0 : iisDecoder
        GENERIC MAP (
            DATA_IN_WIDTH => DATA_IN_WIDTH
        )
        PORT MAP (
            reset      => reset,
            clock      => clock,
            LRCK       => LR_I,
            SCK        => CLK_I,
            DOUT       => Data_I,
            dataValid  => dataValid,
            audioLeft  => audioLeft,
            audioRight => audioRight
        );
    I2 : iisEncoder
        GENERIC MAP (
            DATA_WIDTH => DATA_WIDTH
        )
        PORT MAP (
            reset      => reset,
            clock      => clock,
            audioLeft  => audioRight1,
            audioRight => audioRight1,
            LRCK       => LRCK,
            SCK        => SCK,
            DOUT       => DOUT,
            CLKI2s     => CLK_I,
            LRCK1      => LR_I
        );
    I5 : risingEdgeDetector
        PORT MAP (
            clock     => clock,
            dataValid => dataValid,
            reset     => reset,
            en        => en
        );
    I1 : bascule
        GENERIC MAP (
            DATA_IN_WIDTH => DATA_IN_WIDTH
        )
        PORT MAP (
            audio_L_in  => audioRight,
            audio_R_in  => audioLeft,
            clock       => clock,
            dataVAlid   => en,
            reset       => reset,
            audio_L_out => audio_L_out,
            audio_R_out => audio_R_out
        );

END visitorsVersion;
